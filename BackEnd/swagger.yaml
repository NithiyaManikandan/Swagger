
openapi: 3.0.0
info:
  title: Sample UserForm
  version: 0.1.9
servers:
  - url: http://localhost:8000/userForm
    description: CRUD Form
tags:
  - name: All user
    description: Get all user details
  - name: GET Individual user
    description: Get user by ID
  - name: POST user
    description: Register user detail
  - name: DELETE user
    description: Delete individual user by user ID
  - name: EDIT user
    description: Edit individual user by user ID
paths:
  /get:
    get:
      tags:
        - All user
      description: All registered user will be get from this API's
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                format: int64
        '400':
          description: Error in retriving user detail
  /{_id}:
    get:
      tags:
        - GET Individual user
      description: Get individual user detail by their ID
      parameters:
        - name: _id
          in: path
          description: ID of user to return
          required: true
          type: string
          format: ObjectId
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Error in retriving user detail by Id
  /post:
    post:
      tags:
        - POST user
      description: Post user details in the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error in storing user detail
        '403':
          description: User already exists
  /delete/{_id}:
    delete:
      tags:
        - DELETE user
      description: Delete individual user detail by their ID
      parameters:
        - name: _id
          in: path
          description: ID of user to return
          required: true
          type: string
          format: ObjectId
      responses:
        '200':
          description: successful operation
        '400':
          description: Error in retriving user detail by Id
  /update/{_id}:
    put:
      tags:
        - EDIT user
      description: Update individual user detail by their ID
      parameters:
        - name: _id
          in: path
          description: ID of user to return
          required: true
          type: stringNithiya
          format: ObjectId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
        '400':
          description: Error in retriving user detail by Id
components:
  schemas:
    User:
      properties:
        name:
          type: string
          example: Nithiya
        email:
          type: string
          example: nithiya@gmail.com
        phone:
          type: number
          example: 9876543210
